
const User = require("../Models/User.js");
const generateToken = require("../utils/generateToken");

//User model - helps interact with user specific activities
//generateToken - utility function for JWT token - send to frontend during login and user can stay logged in


//1. For registering a new user

const registerUser = async(req ,res)=>{

    const{ name, email, password, phone} = req.body; // request body contains these info

    // check for is user already exist

    try{
        const userExists = await User.findOne({ email} );
        console.log(userExists);
        if(userExists){
            return res.status(400).json({ message: "User already exists"})
        }

            // Generate a unique username automatically

        //const username = name.replace(/\s+/g, "").toLowerCase() + Date.now();

        // create a new user 
        const user = await User.create ({name, email, password, phone});// username = autogenerated username

       res.status(201).json({
         _id: user._id,
         name:user.name,
         email:user.email,
         phone:user.phone,
         role:user.role,
         token:generateToken(user._id)
       });
    }catch(error){
        res.status(500).json({ message: error.message});
    }
};

// login

const loginUser = async (req ,res) => {
    const { email, password} = req.body;

    //find the usedr in the database by using email- no user exist = 400
    //look for password match

try{

    const user = await User.findOne({email});
    if(!user) 
        return res.status(400).json ({ message: "Invalid credentials"});

    const isMatch = await user.matchPassword(password);
    if(!isMatch)
        return res.status(400).json({message: "Invalid credentials"});

    //if exist

    res.json({
        _id : user._id,
        name:user.name,
        email: user.email,
        phone: user.phone,
        role:user.role,
        token:generateToken(user._id),

    });
} catch(error){
    res.status(500).json({message :error.message});
}
};

// get userprofile , under  profile user can see all the tasks

const getUserProfile = async(req,res) =>{
    const user = await User.findById(req.user._id);

    if(user){
    res.json({
        _id: user._id,
      name: user.name,
      email: user.email,
      phone: user.phone,
      role: user.role,

    });
} else{
    res.status(400).json({ message: " User not found"});
}
};


module.exports = {registerUser, loginUser, getUserProfile};


